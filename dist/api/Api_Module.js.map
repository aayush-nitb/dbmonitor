{"version":3,"sources":["api/Api_Module.ts"],"names":[],"mappings":";AAAA,IAAY,OAAO,WAAM,SAEzB,CAAC,CAFiC;AAElC,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACpC,IAAI,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;AACtC,IAAI,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAE9B;IAAA;IA4BA,CAAC;IA3BU,gBAAK,GAAZ;QACI,IAAI,OAAO,CACP,gBAAgB,EAChB;YACI,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;YACxE,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,MAAM;oBACxD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACxB,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,EAAE;YACC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACnC,CAAC,EACD,IAAI,EACJ,cAAc,EACd,IAAI,EACJ,IAAI,CACP,CAAC;QACF,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QACpC,IAAI,GAAG,GAAwB,OAAO,EAAE,CAAC;QACzC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC3D,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IACL,iBAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BqB,kBAAU,aA4B/B,CAAA","file":"Api_Module.js","sourcesContent":["import * as express from 'express'\n\nlet request = require('superagent');\nlet CronJob = require('cron').CronJob;\nlet _ = require('underscore');\n\nexport abstract class Api_Module {\n    static serve() {\n        new CronJob(\n            '0 */10 * * * *',\n            () => {\n                let now = new Date();\n                console.log(\"Current Time: \" + now.getHours() + \":\" + now.getMinutes());\n                if (now.getHours() > 5 && now.getHours() < 14) {\n                    console.log(\"Ping dbcron\");\n                    request.get(\"https://dbcron.herokuapp.com\").end((err, result) => {\n                        console.log(result);\n                    });\n                }\n            }, () => {\n                console.log(\"Monitor Ended!!\");\n            },\n            true,\n            'Asia/Kolkata',\n            null,\n            true\n        );\n        let port = process.env.PORT || 3002;\n        let app: express.Application = express();\n        app.get('/', (req, res) => res.send('Monitor Job is up!'));\n        app.listen(port, function() {\n            console.log('Monitor started on ' + port);\n        });\n    }\n}"],"sourceRoot":"C:\\Aayush\\Apps\\dbmonitor/server"}